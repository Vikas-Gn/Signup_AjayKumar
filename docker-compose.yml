version: '3.8'

services:
  forgot:
    build:
      context: ./Frontend/forgot
    ports:
      - "9067:80"
    networks:
      - app-network

  login:
    build:
      context: ./Frontend/login
    ports:
      - "9068:80"
    networks:
      - app-network

  signup:
    build:
      context: ./Frontend/signup
    ports:
      - "9069:80"
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
    ports:
      - "3098:3098"
    environment:
      - NODE_ENV=production
      - PORT=3098
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_NAME=auth_db
      - DB_PASSWORD=admin123
      - DB_PORT=5432
      - FRONTEND_URL=http://65.2.184.61:9067
    volumes:
      - ./Backend:/app
      - ./Backend/server.env:/app/server.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: ["./wait-for-postgres.sh", "node", "server.js"]

  postgres:
    image: postgres:14
    ports:
      - "5065:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=auth_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
